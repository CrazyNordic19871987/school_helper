from datetime import datetime, timedelta

class Analytics:
    def __init__(self, progress_manager):
        self.progress_manager = progress_manager
    
    def get_weekly_report(self):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç"""
        week_ago = datetime.now() - timedelta(days=7)
        recent_sessions = []
        
        for session in self.progress_manager.progress_data["sessions"]:
            session_date = datetime.fromisoformat(session["date"])
            if session_date >= week_ago:
                recent_sessions.append(session)
        
        # –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–µ–º
        topic_activity = {}
        for session in recent_sessions:
            for topic in session["found_topics"]:
                topic_activity[topic] = topic_activity.get(topic, 0) + 1
        
        return {
            "sessions_count": len(recent_sessions),
            "active_topics": len(topic_activity),
            "most_problematic_topics": sorted(topic_activity.items(), key=lambda x: x[1], reverse=True)[:3],
            "total_topics_worked": self.progress_manager.progress_data["statistics"]["topics_worked"]
        }
    
    def get_recommendations(self):
        """–í—ã–¥–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —É—á–µ–Ω–∏–∫–∞"""
        weak_topics = self.progress_manager.get_weak_topics()
        summary = self.progress_manager.get_progress_summary()
        
        recommendations = []
        
        if not weak_topics:
            recommendations.append("üéâ –û—Ç–ª–∏—á–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å! –í—Å–µ —Ç–µ–º—ã —É—Å–≤–æ–µ–Ω—ã —Ö–æ—Ä–æ—à–æ.")
        else:
            recommendations.append(f"üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å: {', '.join(weak_topics[:2])}")
        
        if summary["total_sessions"] < 3:
            recommendations.append("üìö –ó–∞–≥—Ä—É–∑–∏—Ç–µ –±–æ–ª—å—à–µ —Ä–∞–±–æ—Ç –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ —á–∞—Å—Ç–æ—Ç–µ –∑–∞–Ω—è—Ç–∏–π
        if summary["total_sessions"] > 5:
            last_session_date = datetime.fromisoformat(
                self.progress_manager.progress_data["sessions"][-1]["date"]
            )
            days_since_last = (datetime.now() - last_session_date).days
            
            if days_since_last > 7:
                recommendations.append("‚è∞ –í—ã –Ω–µ –∑–∞–Ω–∏–º–∞–ª–∏—Å—å –±–æ–ª—å—à–µ –Ω–µ–¥–µ–ª–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏!")
        
        return recommendations