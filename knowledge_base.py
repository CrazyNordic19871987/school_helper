import random

# Расширенная база знаний с заданиями разного уровня сложности
KNOWLEDGE_BASE = {
    "Дроби": {
        "keywords": ["дробь", "числитель", "знаменатель", "сократить", "привести к общему знаменателю", "несократимая", "делитель"],
        "tasks": {
            "easy": [
                "Сократи дробь: 12/18",
                "Запиши дробь: три седьмых",
                "Какая дробь больше: 1/2 или 1/3?"
            ],
            "medium": [
                "Приведи дроби 1/3 и 1/4 к общему знаменателю и сложи их.",
                "Сократи дробь 24/36 до несократимого вида.",
                "Выполни вычитание: 5/6 - 1/3"
            ],
            "hard": [
                "Реши: (2/3 + 1/4) × 6/5",
                "Найди значение выражения: 3/7 ÷ (1 - 2/5)",
                "Сравни дроби, не приводя к общему знаменателю: 7/8 и 8/9"
            ]
        },
        "description": "Работа с обыкновенными дробями"
    },
    "Правописание -ться/-тся": {
        "keywords": ["учиться", "строиться", "получается", "здаться", "боится", "нравится", "смеяться", "пытаться"],
        "tasks": {
            "easy": [
                "Вставьте -ться или -тся: Он хочет многому научи... . У него все получи... .",
                "Составь простое предложение с глаголом 'нравится'"
            ],
            "medium": [
                "Раскрой скобки: (учиться) - Он хорошо... в школе. Он хочет... на отлично.",
                "Найди и исправь ошибки в тексте: 'Мне нравиться читать книги. Они помогают развиватся.'"
            ],
            "hard": [
                "Напиши мини-рассказ (5-7 предложений), используя 3 глагола на -ться и 3 глагола на -тся",
                "Объясни правило правописания -ться/-тся своими словами"
            ]
        },
        "description": "Правописание глагольных окончаний"
    },
    "Площадь и периметр": {
        "keywords": ["площадь", "периметр", "квадрат", "прямоугольник", "см²", "м²", "длина", "ширина"],
        "tasks": {
            "easy": [
                "Найди периметр прямоугольника со сторонами 5 см и 7 см.",
                "Найди площадь квадрата со стороной 6 см."
            ],
            "medium": [
                "Площадь прямоугольника 24 см², а одна сторона 6 см. Найди вторую сторону и периметр.",
                "Периметр квадрата 20 см. Найди его площадь."
            ],
            "hard": [
                "Размеры комнаты 4 м × 5 м. Сколько нужно плиток размером 20 см × 20 см, чтобы покрыть пол?",
                "Периметр прямоугольника 30 см, а площадь 54 см². Найди его стороны."
            ]
        },
        "description": "Геометрические задачи на нахождение площади и периметра"
    },
    "Сложение и вычитание в столбик": {
        "keywords": ["столбик", "сложение", "вычитание", "разряд", "перенос", "заём"],
        "tasks": {
            "easy": [
                "Реши в столбик: 234 + 157",
                "Вычти в столбик: 543 - 278"
            ],
            "medium": [
                "Вычисли: 1204 + 893 + 56",
                "Найди разность: 5000 - 1234"
            ],
            "hard": [
                "Реши цепочку: (1000 - 234) + 567 - 89",
                "Составь и реши свою задачу на сложение и вычитание многозначных чисел"
            ]
        },
        "description": "Арифметические операции с многозначными числами"
    }
}

def get_topics_by_keywords(text):
    """Находит темы по ключевым словам в тексте"""
    text = text.lower()
    found_topics = []
    
    for topic, data in KNOWLEDGE_BASE.items():
        for keyword in data["keywords"]:
            if keyword in text:
                if topic not in found_topics:
                    found_topics.append(topic)
                break
    
    return found_topics

def get_task_for_topic(topic, difficulty="medium"):
    """Возвращает случайное задание по теме заданной сложности"""
    if topic in KNOWLEDGE_BASE and difficulty in KNOWLEDGE_BASE[topic]["tasks"]:
        tasks = KNOWLEDGE_BASE[topic]["tasks"][difficulty]
        return random.choice(tasks)
    return None

def get_topic_description(topic):
    """Возвращает описание темы"""
    return KNOWLEDGE_BASE.get(topic, {}).get("description", "Описание отсутствует")